PRAGMA foreign_keys = ON;
DROP TABLE MyBank;
DROP TABLE Client;
DROP TABLE Account;
DROP TABLE State;
DROP TABLE Type;
DROP TABLE Transfer;
CREATE TABLE State(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    state VARCHAR(15) NOT NULL
);
CREATE TABLE Type(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    type VARCHAR(15) NOT NULL
);
CREATE TABLE MyBank(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(20) NOT NULL
);
CREATE TABLE Client(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    firstName VARCHAR(15) NOT NULL,
    lastName VARCHAR(15) NOT NULL,
    email VARCHAR(30) CHECK(
        email LIKE '%@%'
        AND (
            email LIKE '%gmail.com'
            OR email LIKE '%hotmail.com'
            OR email LIKE '%sapo.pt'
        )
    ),
    hashPassWord VARCHAR(16) CHECK (
        LENGHT(hashPassWord) >= 8
        AND LENGHT(hashPassWord) <= 16
    ),
    bank INTEGER,
    FOREIGN KEY (bank) REFERENCES Bank(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Account(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    balance REAL CHECK(balance > 0),
    date DATETIME NOT NULL,
    client INTEGER,
    FOREIGN KEY (client) REFERENCES Client(id) ON UPDATE CASCADE ON DELETE CASCADE
);
CREATE TABLE Transfer(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    date DATETIME NOT NULL,
    amount REAL CHECK(amount > 0),
    dest INTEGER,
    type INTEGER,
    state INTEGER,
    FOREIGN KEY(dest) REFERENCES Account(id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(type) REFERENCES Type(id) ON UPDATE CASCADE ON DELETE CASCADE,
    FOREIGN KEY(state) REFERENCES State(id) ON UPDATE CASCADE ON DELETE CASCADE
);